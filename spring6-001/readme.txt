1.OCP开闭原则
    a.对扩展开放
    b.对修改关闭
2.DIP依赖倒置原则
    a.面向接口编程，面向抽象编程
    b.降低程序的耦合度，提高扩展力
3.控制反转（IoC,Inversion of Control）：使程序符合OCP和DIP原则
    a.反转：
        i.不采用硬编码的方式new对象
        ii.不采用硬编码的方式维护对象的关系
    b.一种新型的设计模式
4.Spring框架
    a.实现控制反转IoC
    b.控制反转的实现方式有多种，其中比较重要的是：依赖注入（Dependency Injection，简称DI）
    C.依赖注入DI，包括常见的两种方式：
        i.set注入（执行set方法给属性赋值）
        ii.构造方法注入（执行构造方法给属性赋值）
    d.依赖：A对象和B对象的关系，注入：是一种手段，可以让A对象和B对象产生关系